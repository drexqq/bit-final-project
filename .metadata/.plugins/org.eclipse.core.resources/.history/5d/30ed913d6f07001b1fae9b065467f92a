package demo.a.b.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import demo.a.b.dto.MemberDto;
import demo.a.b.mapper.MemberDao;

public class UserDetailService implements UserDetailsService {
	
	@Autowired
	private MemberDao dao;
	
	

	@Override
	public UserDetails loadUserByUsername(String id) throws UsernameNotFoundException {
		Optional<MemberDto> byUserName = dao.findByUserName(id);
        MemberDto account = byUserName.orElseThrow(() -> new UsernameNotFoundException(id));
        
        return new User(account.getId(), account.getPwd(), authorities());

									
	}
	
	private Collection<? extends GrantedAuthority> authorities() {
        return Arrays.asList(new SimpleGrantedAuthority("ROLE_USER"));
    }




}
