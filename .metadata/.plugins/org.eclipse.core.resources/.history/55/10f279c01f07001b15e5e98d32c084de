package demo.a.b.security;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;


@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		 //실제 인증을 진행할 Provider 
	/*	
		AuthenticationManagerBuilder 를 매개변수로 받는 configure메소드 :

			여기서 DB 로부터 아이디,비번이 맞는지 해당 유저가 어떤 권한을 가지는지를 체크한다.

			위에 언급한 인증 구조중에 4번에 해당,

			UserDetailsService 인터페이스를 상속받은 클래스가 있다면 그 클래스에서 인증을 시도 하면된다. 
	*/
	}

	@Override
	public void configure(WebSecurity web) throws Exception {
		//이미지,자바스크립트,css 디렉토리 보안 설정 
		/*
		 Websecurity를 매개변수로 받는 configure 메소드 :

                    이미지 파일, css 파일, 자바스크립트 파일 을 접근 가능하게 처리하는 소스를 입력하면 된다.
		 */
	}

	@Override
	protected void configure(HttpSecurity http) throws Exception {
		//HTTP 관련 보안 설정 **가장 중요
		
		/*
		    HttpSecurity를 매개변수로 받는 configure 메소드 :

                         이 메소드에서 URL 별 권한 설정, 로그인,세션 등등 HTTP 보안 관련 설정을 해주면 된다.
		 */
	}
	
	

}
